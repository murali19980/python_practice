# -*- coding: utf-8 -*-
"""math_python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jChiu0JbN3Ey22RLJ-LSw87LZfibYulF
"""

import math

def addition():
  num1 = float(input("Enter First Number: "))
  num2 = float(input("Enter Second Number: "))
  sum = num1+num2
  print(f"Sum of {num1} and {num2} is {sum}")

def maximum_of_two_numbers():
  num1 = float(input("Enter First Number: "))
  num2 = float(input("Enter Second Number: "))
  max_num = max(num1,num2)
  print(f"Maximum of {num1} and {num2} is {max_num}")

def factorial_of_number():
  num = int(input("Enter a Number: "))
  factorial = 1
  for i in range(1,num+1):
    factorial = factorial*i
  print(f"Factorial of {num} is {factorial}")

def simple_interest():
    principal = float(input("Enter principal amount: "))
    rate = float(input("Enter annual interest rate: "))
    time = float(input("Enter time period in years: "))
    interest = (principal * rate * time) / 100
    print(f"Simple interest is {interest}")

def compound_interest():
    principal = float(input("Enter principal amount: "))
    rate = float(input("Enter annual interest rate: "))
    time = float(input("Enter time period in years: "))

    amount = principal * math.pow((1 + rate / 100), time)
    ci = amount - principal

    print(f"Compound interest is {ci}")

def check_armstrong_number():
    num = int(input("Enter a number: "))
    sum_of_cubes = 0
    temp = num

    while temp > 0:
        digit = temp % 10
        sum_of_cubes += digit ** 3
        temp //= 10

    if num == sum_of_cubes:
        print(f"{num} is an Armstrong number")
    else:
        print(f"{num} is not an Armstrong number")

def area_of_circle():
  radius = float(input("Enter radius of the circle: "))
  area = math.pi * (radius**2)
  print(f"Area of the circle with radius {radius} is {area}")

def print_all_prime_numbers():
  start = int(input("Enter the start of the interval: "))
  end = int(input("Enter the end of the interval: "))
  print(f"Prime numbers between {start} and {end} are:")
  for num in range(start, end + 1):
    if num > 1:
        is_prime = True
        for i in range(2, int(math.sqrt(num)) + 1):
            if num % i == 0:
                is_prime = False
                break
        if is_prime:
            print(num)

def check_prime_number():
    num = int(input("Enter a number: "))
    if num > 1:
        for i in range(2, num):
            if (num % i) == 0:
                print(f"{num} is not a prime number")
                break
        else:
            print(f"{num} is a prime number")
    else:
        print(f"{num} is not a prime number")

def nth_fibonacci_number():
    n = int(input("Enter the value of n: "))
    a, b = 0, 1

    if n <= 0:
        print("Please enter a positive integer")
    elif n == 1:
        print(f"The 1st Fibonacci number is {a}")
    else:
        for _ in range(2, n + 1):
            c = a + b
            a = b
            b = c
        print(f"The {n}th Fibonacci number is {b}")

def check_fibonacci_number():
    def is_perfect_square(x):
        s = int(math.sqrt(x))
        return s * s == x

    def is_fibonacci(num):
        return is_perfect_square(5 * num * num + 4) or is_perfect_square(5 * num * num - 4)

    num = int(input("Enter a number: "))

    if is_fibonacci(num):
        print(f"{num} is a Fibonacci number")
    else:
        print(f"{num} is not a Fibonacci number")

check_fibonacci_number()

def nth_multiple_of_fibonacci():
    n = int(input("Enter the value of n: "))

    if n <= 0:
        print("Please enter a positive integer")
    elif n == 1:
        print("1st multiple of Fibonacci series is 0")
    elif n == 2:
        print("2nd multiple of Fibonacci series is 1")
    else:
        a, b = 0, 1
        count = 2

        while count < n:
            c = a + b
            a = b
            b = c
            count += 1

        print(f"{n}th multiple of Fibonacci series is {b}")

nth_multiple_of_fibonacci()

def print_ascii_value():
    char = input("Enter a character: ")

    if len(char) != 1:
        print("Please enter exactly one character.")
    else:
        print(f"The ASCII value of '{char}' is {ord(char)}")

print_ascii_value()

def sum_of_squares():
    n = int(input("Enter a number: "))

    if n <= 0:
        print("Please enter a positive integer.")
    else:
        sum = (n * (n + 1) * (2 * n + 1)) // 6
        print(f"Sum of squares of first {n} natural numbers is {sum}")

sum_of_squares()

def cubed_sum_of_natural_numbers():
    n = int(input("Enter a number: "))

    if n <= 0:
        print("Please enter a positive integer.")
    else:
        sum = ((n * (n + 1)) // 2) ** 2
        print(f"Sum of cubes of first {n} natural numbers is {sum}")

cubed_sum_of_natural_numbers()

import math
def main():
    while True:
        print("\nWelcome! Please select a program to run:")
        print("1. Python program to add two numbers")
        print("2. Maximum of two numbers in Python")
        print("3. Python program for factorial of a number")
        print("4. Python program for simple interest")
        print("5. Python program for compound interest")
        print("6. Python program to check Armstrong number")
        print("7. Python program for finding area of circle")
        print("8. Python program to print all prime numbers in an interval")
        print("9. Python program to check whether a number is prime or not")
        print("10. Python program for nth Fibonacci number")
        print("11. Python program to check if a given number is Fibonacci number")
        print("12. Python program for nth multiple of a number in Fibonacci series")
        print("13. Python program to print ASCII value of a character")
        print("14. Python program for sum of squares of first ten natural numbers")
        print("15. Python program for cubed sum of first ten natural numbers")
        print("0. Exit")

        choice = input("Enter the number of the program you want to run (0 to exit): ")

        if choice == '1':
            addition()
        elif choice == '2':
            maximum_of_two_numbers()
        elif choice == '3':
            factorial_of_number()
        elif choice == '4':
            simple_interest()
        elif choice == '5':
            compound_interest()
        elif choice == '6':
            check_armstrong_number()
        elif choice == '7':
            area_of_circle()
        elif choice == '8':
            print_all_prime_numbers()
        elif choice == '9':
            check_prime_number()
        elif choice == '10':
            nth_fibonacci_number()
        elif choice == '11':
            check_fibonacci_number()
        elif choice == '12':
            nth_multiple_of_fibonacci()
        elif choice == '13':
            print_ascii_value()
        elif choice == '14':
            sum_of_squares()
        elif choice == '15':
            cubed_sum_of_natural_numbers()
        elif choice == '0':
            print("Exiting the program. Goodbye!")
            break
        else:
            print("Invalid choice. Please enter a number between 0 and 15.")

main()